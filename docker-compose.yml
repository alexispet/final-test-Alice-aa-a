services:
  db:
    image: mariadb:11.2.2
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: yes
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - "./docker/mariadb/data:/var/lib/mysql"
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 20s
      retries: 10
  express:
    image: ghcr.io/alexispet/final-test-alice-aa-a/express:main
    depends_on:
      - db
    env_file: .env
    environment:
      NODE_ENV: development
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
#    networks:
#      - custom_frontend
#    labels:
#      - "com.centurylinklabs.watchtower.enable=true"
#      - "traefik.enable=true"
#      - "traefik.http.routers.next-prod.rule=Host(`ec2-44-204-232-48.compute-1.amazonaws.com`)"
#      - "traefik.http.routers.next-prod.entrypoints=main"
#    command: ["npm", "run", "start"]
    volumes:
      - ".:/app"

#  traefik:
#    image: "traefik:v2.10"
#    container_name: "traefik"
#    command:
#      - "--log.level=DEBUG"
#      - "--api.insecure=true"
#      - "--providers.docker=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--entrypoints.main.address=:3000"
#    ports:
#      - "3000:3000"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  adminer:
    image: adminer
    ports:
      - 8080:8080

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --label-enable
#
#networks:
#  custom_frontend:
#    external: true